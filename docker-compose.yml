version: '3.8'

services:
  db:
    container_name: postgredb
    image: postgres:13
    env_file:
      - config/postgredb.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./sql/brewerydb.sql:/docker-entrypoint-initdb.d/brewerydb.sql
      - ./files:/files
    ports:
      - "55432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - config/postgredb.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app_network
    depends_on:
      - db
    restart: always

  # --- AIRFLOW ---
  airflow-init:
    image: apache/airflow:2.9.1
    env_file:
      - config/airflow.env
    depends_on:
      db:
        condition: service_healthy
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@${AIRFLOW_DB_HOST}:${AIRFLOW_DB_PORT}/${AIRFLOW_DB_NAME}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    command: bash -c "airflow db init && airflow users create --role Admin --username admin --password admin --email admin@example.com --firstname admin --lastname admin"
    networks:
      - app_network
    restart: on-failure

  airflow-webserver:
    image: apache/airflow:2.9.1
    env_file:
      - config/airflow.env
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@${AIRFLOW_DB_HOST}:${AIRFLOW_DB_PORT}/${AIRFLOW_DB_NAME}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
    command: airflow webserver
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always

  airflow-scheduler:
    build: .
    env_file:
      - config/airflow.env
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASSWORD}@${AIRFLOW_DB_HOST}:${AIRFLOW_DB_PORT}/${AIRFLOW_DB_NAME}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    command: airflow scheduler
    networks:
      - app_network
    restart: always

# Redes e Volumes
networks:
  app_network:
    driver: bridge

volumes:
  postgresql_data:
  pgadmin_data: